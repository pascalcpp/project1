#include<iostream>
#include<math.h>
#include<cstring>
#include<string>
using namespace std;
int main()
{	char a[25000] = { '\0' };
	char b[12000] = { '\0' };
	char c[12000] = { '\0' };
	char d[12000] = { '\0' };
	int count = 0;
	int count2 = 0;
	int flag = 0;
	int m;
	char temp;
	int n = 0;
	cin >> a;
	for (int i = 0; i<strlen(a); i++)
	{
		
		if (a[i] == 'E')
		{
			flag = 1;
			i++;
			count = 0;
		}
		if (flag == 0)
		{
			d[count2] = a[i];
			count2++;
		}
		if (flag == 0 && a[i] != '.')
		{
			b[count] = a[i];
			count++;
		}
		if (flag == 1)
		{
			c[count] = a[i];
			count++;
		}
	}
	if (c[0]=='0')
	{
		cout << d;
		return 0;
	}
	if (c[2] == '\0'&&c[1] == '0')
	{
		cout << d;
		return 0;
	}
	if (c[2] == '0'&&c[1] == '0')
	{
		cout << d;
		return 0;
	}



	count = 0;
	for (int i = (strlen(c)-1); i >= 1; i--)
	{
		int temp = c[i] - '0';
		n = n + temp * pow(10, count);
		count++;
	}
	if (c[0] == '+')
	{
		for (int j = 0; j < n; j++)
		{
			temp = d[j + 3];
				d[j + 3] = d[2 + j];
				d[2 + j] = temp;
		}
		for (int i = 1; i<n + 2; i++)
		{
			if (d[i] == '\0')
				d[i] ='0';
		}
		if (d[n + 3] == '\0')
			d[n + 2] = '\0';

		if (d[0] == '+')
		{
			string p;
			int u = 0;
			while (d[u] == '0'||d[u]=='+')
			{
				u++;
			}
			string s = d;
			p = s.substr(u);
			/*for (int i = 1; i < strlen(d); i++)
			cout << d[i];*/
			cout << p;
		}
		if (d[0] == '-')
		{
			string p;
			int u = 0;
			while (d[u] == '0'||d[u]=='-')
			{
				u++;
			}
			string s = d;
			p = s.substr(u);
			/*for (int i = 1; i < strlen(d); i++)
			cout << d[i];*/
			cout << "-";
			cout << p;
		}
		
	}
	
	if (c[0] == '-')
	{
		for (int i = 0; i<n; i++)
		{
			if (i == 0 && b[0] == '+')
				cout << "0.";
			if (i == 0 && b[0] == '-')
				cout << "-0.";
			if (i != 0)
				cout << "0";
		}
		for (int i = 1; i < strlen(b); i++)
		{
				cout << b[i];
		}

	}




	return 0;
}




